{"mappings":"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","sources":["src/components/Layer.ts","src/components/Background.ts","src/components/Control.ts","src/components/Sprite.ts","src/components/Player.ts","src/components/Enemies/Enemy.ts","src/components/Enemies/Ghost.ts","src/components/Enemies/Spider.ts","src/components/Enemies/Worm.ts","src/components/Platform.ts","src/components/Portal.ts","src/components/Levels/Level.ts","src/components/Levels/Level0.ts","src/components/Levels/Level1.ts","src/components/Levels/index.ts","src/components/UI.ts","src/components/Boom.ts","src/index.ts","src/components/Game.ts"],"sourcesContent":["import { Game } from './Game';\n\nexport class Layer {\n    game: Game;\n    image: HTMLImageElement;\n    height: number;\n    width: number;\n    x = -1;\n    y = -1;\n    speed: number;\n\n    constructor(game: Game, image: HTMLImageElement, speed: number) {\n        this.game = game;\n        this.image = image;\n        this.width = image.width;\n        this.height = image.height;\n        this.speed = speed;\n    }\n\n    update(speed: number) {\n        if (this.x <= -this.width) this.x = 0;\n        else this.x -= speed * this.speed;\n    }\n\n    draw() {\n        this.game.ctx.drawImage(this.image, this.x, this.y);\n        this.game.ctx.drawImage(this.image, this.x + this.width, this.y);\n    }\n}\n","import { Game } from './Game';\nimport { Layer } from './Layer';\n\nexport class Background {\n    game: Game;\n    layers: Layer[] = [];\n\n    constructor(game: Game) {\n        this.game = game;\n\n        this.layers = [\n            new Layer(game, <HTMLImageElement>document.getElementById('bg'), 0),\n            new Layer(game, <HTMLImageElement>document.getElementById('hills'), 0.5),\n        ];\n    }\n\n    update(speed: number) {\n        this.layers.forEach(layer => layer.update(speed));\n    }\n\n    draw() {\n        this.layers.forEach(layer => layer.draw());\n    }\n}\n","import { Player } from './Player';\n\nexport class Control {\n    keys: {[action: string]: {key: string, pressed: boolean}} = {\n        right: { key: 'd', pressed: false },\n        left: { key: 'a', pressed: false },\n        up: { key: 'w',  pressed: false }\n    };\n\n\n    constructor() {\n        this.addDesktopControl();\n    }\n\n    addDesktopControl() {\n        window.addEventListener('keydown', (e: KeyboardEvent) => {\n            for (const action in this.keys) {\n                if (e.key === this.keys[action].key) {\n                    this.keys[action].pressed = true;\n                }\n            }\n        });\n\n        window.addEventListener('keyup', (e: KeyboardEvent) => {\n            for (const action in this.keys) {\n                if (e.key === this.keys[action].key) {\n                    this.keys[action].pressed = false;\n                }\n            }\n        });\n    }\n}\n","import { Game } from './Game';\n\nexport abstract class Sprite {\n    abstract image: HTMLImageElement;\n    abstract frameX: number;\n    abstract frameY: number;\n    abstract maxFrame: number;\n    abstract game: Game;\n    abstract x: number;\n    abstract y: number;\n    abstract width: number;\n    abstract height: number;\n\n    updateSprite() {\n        if (this.frameX < this.maxFrame) this.frameX++;\n        else this.frameX = 0;\n    }\n\n    draw() {\n        this.game.ctx.drawImage(\n            this.image,\n            this.frameX * this.width,\n            this.frameY * this.height,\n            this.width,\n            this.height,\n            this.x,\n            this.y,\n            this.width,\n            this.height\n        );\n    }\n}\n","import { Game } from './Game';\nimport { Sprite } from './Sprite';\n\nexport class Player extends Sprite {\n    game: Game;\n    x = 0;\n    y = 0;\n    image = <HTMLImageElement>document.getElementById('idleRight');\n    width = 0;\n    height = 200;\n    frameX = 0;\n    frameY = 0;\n    speedX = 0;\n    speedY = 0;\n    gravity = 0.8;\n    maxFrame = 0;\n    lives: number;\n\n    constructor(game: Game, lives: number) {\n        super();\n        this.game = game;\n        this.turnRight();\n        this.lives = lives;\n    }\n\n    update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        this.onGravity();\n        this.updateSprite();\n    }\n\n    private onGravity() {\n        if (this.y + this.height + this.speedY <= this.game.canvas.height) this.speedY += this.gravity;\n    }\n\n    private turnRight() {\n        this.image = <HTMLImageElement>document.getElementById('idleRight');\n        this.maxFrame = 59;\n        this.width = 88.5;\n    }\n\n    private turnLeft() {\n        this.image = <HTMLImageElement>document.getElementById('idleLeft');\n        this.maxFrame = 59;\n        this.width = 88.5;\n    }\n\n    setWalkRightSkin() {\n        this.image = <HTMLImageElement>document.getElementById('walkRight');\n        this.width = 170.5;\n        this.maxFrame = 29;\n    }\n\n    setWalkLeftSkin() {\n        this.image = <HTMLImageElement>document.getElementById('walkLeft');\n        this.width = 170.5;\n        this.maxFrame = 29;\n    }\n\n    stop() {\n        this.turnRight();\n        this.speedX = 0;\n    }\n\n    jump() {\n        if (this.speedY === 0) this.speedY = -22;\n    }\n}\n","import { Game } from '../Game';\nimport { Sprite } from '../Sprite';\n\nexport abstract class Enemy extends Sprite {\n    game: Game;\n    abstract x: number;\n    abstract y: number;\n    abstract image: HTMLImageElement;\n    abstract width: number;\n    abstract height: number;\n    abstract maxFrame: number;\n    abstract lives: number;\n    abstract speed: number;\n    gravity = 0.8;\n    frameX = 0;\n    frameY = 0;\n    speedY = 0;\n    speedX = 0;\n    markDeleted = false;\n    enemyTimer = 0;\n    enemyInterval = 2000;\n\n    constructor(game: Game) {\n        super();\n        this.game = game;\n    }\n\n    update(deltaTime: number) {\n        this.x += this.speedX - this.speed;\n        this.y += this.speedY;\n        if (this.y + this.height + this.speedY <= this.game.canvas.height) this.speedY += this.gravity;\n        this.updateSprite();\n\n        if (this.enemyTimer > this.enemyInterval) {\n            this.attack();\n            this.enemyTimer = 0;\n        } else {\n            this.enemyTimer += deltaTime;\n        }\n    }\n\n    kill() {\n        this.markDeleted = true;\n    }\n\n    // eslint-disable-next-line\n    protected attack() {}\n}\n","import { Game } from '../Game';\nimport { Enemy } from './Enemy';\n\nexport class Ghost extends Enemy {\n    game: Game;\n    x: number;\n    y: number;\n    image = <HTMLImageElement>document.getElementById('ghost');\n    width = 130.5;\n    height = 104.5;\n    frameX = 0;\n    frameY = 0;\n    speedX = 0;\n    speedY = 0;\n    maxFrame = 5;\n    lives = 1;\n    speed = 4;\n    gravity = 0;\n\n    constructor(game: Game, coord: {x: number, y: number}) {\n        super(game);\n        this.game = game;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n\n    attack(): void {\n        this.speed = Math.floor(Math.random() * (6 - 3 + 1) + 6);\n    }\n\n}\n","import { Game } from '../Game';\nimport { Enemy } from './Enemy';\n\nexport class Spider extends Enemy {\n    game: Game;\n    x: number;\n    y: number;\n    image = <HTMLImageElement>document.getElementById('spider');\n    width = 155;\n    height = 88;\n    frameX = 0;\n    frameY = 0;\n    speedX = 0;\n    speedY = 0;\n    maxFrame = 5;\n    lives = 1;\n    speed = 1.5;\n\n    constructor(game: Game, coord: {x: number, y: number}) {\n        super(game);\n        this.game = game;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n\n    attack() {\n        this.speedY = -Math.floor(Math.random() * (15 - 5 + 1) + 15);\n    }\n}\n","import { Game } from '../Game';\nimport { Enemy } from './Enemy';\n\nexport class Worm extends Enemy {\n    game: Game;\n    x: number;\n    y: number;\n    image = <HTMLImageElement>document.getElementById('worm');\n    width = 114.5;\n    height = 85.5;\n    frameX = 0;\n    frameY = 0;\n    speedX = 0;\n    speedY = 0;\n    maxFrame = 5;\n    lives = 1;\n    speed = 1;\n\n    constructor(game: Game, coord: {x: number, y: number}) {\n        super(game);\n        this.game = game;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n}\n","import { Game } from './Game';\n\nexport class Platform {\n    game: Game;\n    x: number;\n    y: number;\n    width = 500;\n    height = 100;\n    speedX = 0;\n    speedY = 0;\n    image: HTMLImageElement;\n\n    constructor(game: Game, image: HTMLImageElement, coord: {x: number, y: number}) {\n        this.game = game;\n        this.image = image;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n\n    update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n    }\n\n    draw() {\n        this.game.ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n    }\n}\n","import { Game } from './Game';\nimport { Sprite } from './Sprite';\n\nexport class Portal extends Sprite {\n    image = <HTMLImageElement>document.getElementById('door');\n    frameX = 0;\n    frameY = 0;\n    maxFrame = 5;\n    x: number;\n    y: number;\n    game: Game;\n    opened = false;\n    touched = false;\n    height = 224;\n    width = 184;\n    speedX = 0;\n\n    constructor(game: Game, coord: {x: number, y: number}) {\n        super();\n        this.game = game;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n\n    update() {\n        this.x += this.speedX;\n        if (this.touched && this.frameX < this.maxFrame - 1) this.frameX++;\n        else if (!this.touched) this.frameX = 0;\n        else {\n            this.frameX = this.maxFrame - 1;\n            setTimeout(() => this.opened = true, 500);\n        }\n    }\n\n}\n","import { Boom } from '../Boom';\nimport { Enemy } from '../Enemies/Enemy';\nimport { Game } from '../Game';\nimport { Platform } from '../Platform';\nimport { Portal } from '../Portal';\n\nexport abstract class Level {\n    game: Game;\n    abstract platforms: Platform[];\n    abstract portal: Portal;\n    abstract endX: number;\n    abstract message: null | string;\n    abstract enemies: Enemy[];\n    abstract booms: Boom[];\n    abstract enemiesToAdd: {[key: string]: Enemy[]};\n\n    constructor(game: Game) {\n        this.game = game;\n        setTimeout(() => this.message = null, 1000);\n    }\n\n    draw() {\n        this.platforms.forEach(platform => platform.draw());\n        this.portal.draw();\n        this.enemies.forEach(enemy => enemy.draw());\n        this.booms.forEach(boom => boom.draw());\n    }\n\n    update(deltaTime: number) {\n        this.portal.update();\n        this.enemies.forEach(enemy => enemy.update(deltaTime));\n        this.booms.forEach(boom => boom.update());\n\n        this.enemies = this.enemies.filter(enemy => {\n            if (enemy.markDeleted) return false;\n            if (enemy.y > this.game.canvas.height) return false;\n            if (enemy.x + 500 < 0) return false;\n            return true;\n        });\n        this.booms = this.booms.filter(boom => !boom.markDeleted);\n\n        for (const offset in this.enemiesToAdd) {\n            const enemiesList = this.enemiesToAdd[offset];\n            if (this.game.scrollOffset > Number(offset) && enemiesList && enemiesList.length) {\n                this.enemies.push(...enemiesList);\n                delete this.enemiesToAdd[offset];\n            }\n        }\n    }\n}\n","import { Boom } from '../Boom';\nimport { Enemy } from '../Enemies/Enemy';\nimport { Ghost } from '../Enemies/Ghost';\nimport { Spider } from '../Enemies/Spider';\nimport { Worm } from '../Enemies/Worm';\nimport { Game } from '../Game';\nimport { Platform } from '../Platform';\nimport { Portal } from '../Portal';\nimport { Level } from './Level';\n\nconst platformImg = <HTMLImageElement>document.getElementById('platform');\n\nexport class Level0 extends Level {\n    game: Game;\n    platforms: Platform[] = [];\n    enemies: Enemy[] = [];\n    booms: Boom[] = [];\n    endX = 5900;\n    portal: Portal;\n    message = 'Level 1';\n    enemiesToAdd = {\n        1200: [\n            new Worm(this.game, { x: 1000, y: 300 }),\n            new Worm(this.game, { x: 1200, y: 300 }),\n            new Worm(this.game, { x: 1350, y: 300 }),\n            new Worm(this.game, { x: 1500, y: 300 }),\n        ],\n        1600: [\n            new Worm(this.game, { x: 1600, y: 100 }),\n            new Ghost(this.game, { x: 2000, y: 50 }),\n            new Spider(this.game, { x: 1200, y: 50 }),\n        ],\n        3300: [\n            new Worm(this.game, { x: 900, y: 0 }),\n            new Worm(this.game, { x: 1100, y: 0 }),\n            new Ghost(this.game, { x: 2000, y: 50 }),\n\n        ],\n        4500: [\n            new Worm(this.game, { x: 900, y: 0 }),\n            new Spider(this.game, { x: 1000, y: 50 }),\n            new Spider(this.game, { x: 1100, y: 50 }),\n        ],\n    };\n\n    constructor(game: Game) {\n        super(game);\n        this.game = game;\n        this.portal = new Portal(this.game, { x: 5500, y: 276 });\n\n        this.platforms = [\n            new Platform(this.game, platformImg, { x: 300, y: 200 }),\n            new Platform(this.game, platformImg, { x: -110, y: 500 }),\n            new Platform(this.game, platformImg, { x: 389, y: 500 }),\n            new Platform(this.game, platformImg, { x: 888, y: 500 }),\n            new Platform(this.game, platformImg, { x: 1900, y: 500 }),\n            new Platform(this.game, platformImg, { x: 2400 - 1, y: 500 }),\n            new Platform(this.game, platformImg, { x: 2900 - 2, y: 500 }),\n            new Platform(this.game, platformImg, { x: 4000, y: 400 }),\n            new Platform(this.game, platformImg, { x: 5000, y: 500 }),\n            new Platform(this.game, platformImg, { x: 5500 - 1, y: 500 }),\n            new Platform(this.game, platformImg, { x: 6000 - 2, y: 500 }),\n            new Platform(this.game, platformImg, { x: 6500 - 3, y: 500 }),\n        ];\n\n        this.enemies = [\n            new Worm(this.game, { x: 400, y: 300 }),\n            new Worm(this.game, { x: 550, y: 300 }),\n            new Worm(this.game, { x: 700, y: 300 }),\n            new Ghost(this.game, { x: 1300, y: 100 }),\n            new Spider(this.game, { x: 1300, y: 100 })\n        ];\n    }\n}\n","import { Boom } from '../Boom';\nimport { Enemy } from '../Enemies/Enemy';\nimport { Ghost } from '../Enemies/Ghost';\nimport { Spider } from '../Enemies/Spider';\nimport { Worm } from '../Enemies/Worm';\nimport { Game } from '../Game';\nimport { Platform } from '../Platform';\nimport { Portal } from '../Portal';\nimport { Level } from './Level';\n\nconst platformImg = <HTMLImageElement>document.getElementById('platform');\n\nexport class Level1 extends Level {\n    portal: Portal;\n    game: Game;\n    platforms: Platform[] = [];\n    enemies: Enemy[] = [];\n    booms: Boom[] = [];\n    endX = 5900;\n    message = 'Level 2';\n    enemiesToAdd = {\n        800: [\n            new Spider(this.game, { x: 1200, y: 100 }),\n        ],\n        1200: [\n            new Worm(this.game, { x: 1200, y: 300 }),\n            new Worm(this.game, { x: 1300, y: 300 }),\n            new Worm(this.game, { x: 1400, y: 300 }),\n        ],\n        1400: [\n            new Ghost(this.game, { x: 2000, y: 100 }),\n        ],\n        1600: [\n            new Worm(this.game, { x: 1600, y: 100 }),\n        ],\n        3300: [\n            new Ghost(this.game, { x: 1600, y: 100 }),\n            new Worm(this.game, { x: 900, y: 0 }),\n            new Worm(this.game, { x: 1100, y: 0 }),\n        ],\n        4500: [\n            new Worm(this.game, { x: 900, y: 0 }),\n            new Ghost(this.game, { x: 2000, y: 50 }),\n            new Spider(this.game, { x: 800, y: 100 }),\n        ],\n        5000: [\n            new Worm(this.game, { x: 900, y: 0 }),\n            new Worm(this.game, { x: 1100, y: 0 }),\n            new Worm(this.game, { x: 1200, y: 0 }),\n            new Ghost(this.game, { x: 2000, y: 150 }),\n            new Spider(this.game, { x: 1200, y: 100 }),\n            new Spider(this.game, { x: 1400, y: 100 }),\n        ],\n    };\n\n    constructor(game: Game) {\n        super(game);\n        this.game = game;\n        this.portal = new Portal(this.game, { x: 6500, y: 276 });\n\n        this.platforms = [\n            new Platform(this.game, platformImg, { x: 2500, y: 200 }),\n            new Platform(this.game, platformImg, { x: 3000, y: 100 }),\n            new Platform(this.game, platformImg, { x: 3500, y: 50 }),\n            new Platform(this.game, platformImg, { x: -110, y: 500 }),\n            new Platform(this.game, platformImg, { x: 389, y: 500 }),\n            new Platform(this.game, platformImg, { x: 1500, y: 500 }),\n            new Platform(this.game, platformImg, { x: 2400 - 1, y: 500 }),\n            new Platform(this.game, platformImg, { x: 2900 - 2, y: 500 }),\n            new Platform(this.game, platformImg, { x: 4000, y: 400 }),\n            new Platform(this.game, platformImg, { x: 5000, y: 500 }),\n            new Platform(this.game, platformImg, { x: 5500 - 1, y: 500 }),\n            new Platform(this.game, platformImg, { x: 6000 - 2, y: 500 }),\n            new Platform(this.game, platformImg, { x: 6500 - 3, y: 500 }),\n        ];\n\n        this.enemies = [\n            new Worm(this.game, { x: 400, y: 300 }),\n            new Worm(this.game, { x: 500, y: 300 }),\n            new Worm(this.game, { x: 600, y: 300 }),\n        ];\n    }\n}\n","import { Level0 } from './Level0';\nimport { Level1 } from './Level1';\n\nconst levels = [Level0, Level1];\n\nexport { levels };\n","import { Game } from './Game';\n\nexport class UI {\n    game: Game;\n    heartImg = <HTMLImageElement>document.getElementById('heart');\n\n    constructor(game: Game) {\n        this.game = game;\n    }\n\n    draw() {\n        const ctx = this.game.ctx;\n        for (let i = 1; i <= this.game.player.lives; i++) {\n            ctx.drawImage(this.heartImg, 20 * i + 20 * i, 20, 20, 20);\n        }\n\n        ctx.textAlign = 'center';\n        ctx.fillStyle = 'white';\n        ctx.font = '58px Tahoma';\n        const width = this.game.canvas.width / 2;\n        const height = this.game.canvas.height / 2;\n\n        if (this.game.gameOver) this.game.ctx.fillText('Game Over', width, height);\n        if (this.game.win) this.game.ctx.fillText('You Win', width, height);\n        if (this.game.level.message) this.game.ctx.fillText(this.game.level.message, width, height);\n    }\n}\n","import { Game } from './Game';\nimport { Sprite } from './Sprite';\n\nexport class Boom extends Sprite {\n    frameX = 0;\n    frameY = 0;\n    maxFrame = 4;\n    game: Game;\n    width = 100;\n    height = 90;\n    image = <HTMLImageElement> document.getElementById('boom');\n    x = 0;\n    y: number;\n    markDeleted = false;\n    speedX = 0;\n\n    constructor(game: Game, coord: {x: number, y: number}) {\n        super();\n        this.game = game;\n        this.x = coord.x;\n        this.y = coord.y;\n    }\n\n    update() {\n        this.x += this.speedX;\n        if (this.frameX < this.maxFrame) this.frameX++;\n        else this.markDeleted = true;\n    }\n}\n","import { Game } from './components/Game';\n\nconst game = new Game();\n\nlet lastUpdateTime = 0;\n\nfunction animate(timeStamp: number) {\n    const deltaTime = timeStamp - lastUpdateTime;\n    lastUpdateTime = timeStamp;\n    game.update(deltaTime);\n    game.draw();\n    requestAnimationFrame(animate);\n}\nanimate(0);\n","import { Background } from './Background';\nimport { Control } from './Control';\nimport { Player } from './Player';\nimport { levels } from './Levels';\nimport { UI } from './UI';\nimport { Platform } from './Platform';\nimport { Level } from './Levels/Level';\nimport { Enemy } from './Enemies/Enemy';\nimport { Boom } from './Boom';\n\nexport class Game {\n    canvas = <HTMLCanvasElement>document.getElementById('canvas');\n    ctx = <CanvasRenderingContext2D> this.canvas.getContext('2d');\n    player = new Player(this, 3);\n    control = new Control();\n    background = new Background(this);\n    ui = new UI(this);\n    levelIndex = 0;\n    level: Level;\n    speed = 10;\n    scrollOffset = 0;\n    gameOver = false;\n    win = false;\n\n    constructor() {\n        this.canvas.width = 1024;\n        this.canvas.height = 576;\n        const Level = levels[this.levelIndex];\n        this.level = new Level(this);\n    }\n\n    update(deltaTime: number) {\n        this.ctx.fillStyle = '#999';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.player.update();\n        this.level.update(deltaTime);\n\n        this.level.platforms.forEach((platform: Platform) => {\n            platform.update();\n            if (this.platformCollistions(this.player, platform)) {\n                this.player.speedY = 0;\n            }\n            this.level.enemies.forEach(enemy => {\n                if (this.platformCollistions(enemy, platform)) {\n                    enemy.speedY = 0;\n                }\n            });\n        });\n\n        if (this.gameOver || this.win) {\n            this.stopMoving();\n            return;\n        }\n        // player control\n        if (this.control.keys.right.pressed && this.control.keys.left.pressed) {\n            this.player.stop();\n            this.stopMoving();\n        } else if (this.control.keys.right.pressed) {\n            this.player.setWalkRightSkin();\n            if (this.player.x < 500) this.player.speedX = this.speed;\n            else {\n                this.player.speedX = 0;\n                if (this.scrollOffset < this.level.endX) {\n                    this.scrollOffset += this.speed;\n                    this.background.update(this.speed);\n                    this.level.portal.speedX = -this.speed;\n                    this.level.platforms.forEach(platform => platform.speedX = -this.speed);\n                    this.level.enemies.forEach(enemy => enemy.speedX = -this.speed + enemy.speed);\n                } else {\n                    this.scrollOffset = this.level.endX;\n                    this.stopMoving();\n                }\n            }\n        } else if (this.control.keys.left.pressed) {\n            this.player.setWalkLeftSkin();\n            if (this.player.x > 100) this.player.speedX = -this.speed;\n            else {\n                this.player.speedX = 0;\n                const startBorder = -100;\n                if (this.scrollOffset > startBorder) {\n                    this.scrollOffset -= this.speed;\n                    this.level.portal.speedX = this.speed;\n                    this.level.platforms.forEach(platform => platform.speedX = this.speed);\n                    this.level.enemies.forEach(enemy => enemy.speedX = this.speed - enemy.speed);\n                    this.background.update(-this.speed);\n                } else {\n                    this.scrollOffset = startBorder;\n                    this.stopMoving();\n                }\n            }\n        } else {\n            this.player.stop();\n            this.stopMoving();\n        }\n\n        if (this.control.keys.up.pressed) {\n            this.player.jump();\n        }\n\n        // enemy touch\n        this.level.enemies.forEach(enemy => {\n            if (enemy.markDeleted) return;\n            if (this.checkCollistions(enemy, this.player)) {\n                if (this.enemyKillCollistions(this.player, enemy)) {\n                    enemy.kill();\n                    this.level.booms.push(new Boom(this, { x: enemy.x, y: enemy.y + enemy.height / 2 }));\n                    this.player.speedY = -10;\n                } else {\n                    this.loose();\n                }\n            }\n        });\n\n        // winning\n        if (this.checkCollistions(this.level.portal, this.player)) {\n            this.level.portal.touched = true;\n        }\n\n        if (this.level.portal.opened) {\n            if (levels[this.levelIndex + 1]) {\n                this.levelIndex++;\n                this.init();\n            } else this.win = true;\n        }\n\n        // lose condition\n        if (this.player.y > this.canvas.height) {\n            this.loose();\n        }\n    }\n\n    draw() {\n        this.background.draw();\n        this.level.draw();\n        this.player.draw();\n        this.ui.draw();\n    }\n\n    private loose() {\n        this.player.lives--;\n        if (this.player.lives > 0) this.init();\n        else this.gameOver = true;\n    }\n\n    private init() {\n        this.scrollOffset = 0;\n        this.player = new Player(this, this.player.lives);\n        this.background = new Background(this);\n        const Level = levels[this.levelIndex];\n        this.level = new Level(this);\n    }\n\n    private stopMoving() {\n        this.level.platforms.forEach(platform => platform.speedX = 0);\n        this.level.enemies.forEach(enemy => enemy.speedX = 0);\n        this.level.portal.speedX = 0;\n    }\n\n    private checkCollistions(rect1: any, rect2: any): boolean {\n        return (\n            rect1.x < rect2.x + rect2.width &&\n            rect1.x + rect1.width > rect2.x &&\n            rect1.y < rect2.y + rect2.height &&\n            rect1.y + rect1.height > rect2.y\n        );\n    }\n\n    private platformCollistions(topRrect: any, platform: Platform): boolean {\n        return (\n            topRrect.y + topRrect.height <= platform.y &&\n            topRrect.y + topRrect.height + topRrect.speedY >= platform.y &&\n            topRrect.x + topRrect.width >= platform.x &&\n            topRrect.x <= platform.x + platform.width\n        );\n    }\n\n    private enemyKillCollistions(player: Player, enemy: Enemy): boolean {\n        return (\n            player.y + player.height - 10 <= enemy.y &&\n            player.y + player.height + player.speedY >= enemy.y &&\n            player.x + player.width >= enemy.x &&\n            player.x <= enemy.x + enemy.width\n        );\n    }\n}\n"],"names":["$44faa45cf852f7b3$export$936d0764594b6eb3","x","y","constructor","game","image","speed","this","width","height","update","draw","ctx","drawImage","$fe7fb059fad9cdb6$export$668799e4797757a8","layers","document","getElementById","forEach","layer","$df28da8dd7a55ba3$export$7a7fa4424cb20976","keys","right","key","pressed","left","up","addDesktopControl","window","addEventListener","e","action","$e131cb4d064cd49a$export$3075603db8e6204c","updateSprite","frameX","maxFrame","frameY","$6d91ef257fa813c6$export$2616165974278734","speedX","speedY","gravity","lives","super","turnRight","onGravity","canvas","turnLeft","setWalkRightSkin","setWalkLeftSkin","stop","jump","$fdd92d509316a8b9$export$eefe978c73a9a6","markDeleted","enemyTimer","enemyInterval","deltaTime","attack","kill","$8ac1ed1fc783999a$export$c0bd6680a351a7b4","coord","Math","floor","random","$eb4c91eca982dec6$export$10def52a501e6ae9","$71569cb6d4b1c014$export$682d572b42d4f014","$1c2cd72f6084c397$export$2dffd0b5373a4389","$1ee90d9c5053d87a$export$602eac185826482c","opened","touched","setTimeout","$8cd6d00b929ece72$export$ca664994d1d54bff","message","platforms","platform","portal","enemies","enemy","booms","boom","filter","offset","enemiesToAdd","enemiesList","scrollOffset","Number","length","push","$674db01546e17f42$var$platformImg","$73f3129d37fb551b$var$platformImg","$37bb4e9b3baf651f$export$cc32c6afed33d362","endX","$33b28264c1504bd0$export$4b08aed5f1ec6952","heartImg","i","player","textAlign","fillStyle","font","gameOver","fillText","win","level","$d7c7675fd01b9e01$export$ac8d9be96fb9810d","$b4e14b6b8da86996$var$game","getContext","control","background","ui","levelIndex","Level","fillRect","platformCollistions","stopMoving","startBorder","checkCollistions","enemyKillCollistions","loose","init","rect1","rect2","topRrect","$b4e14b6b8da86996$var$lastUpdateTime","$b4e14b6b8da86996$var$animate","timeStamp","requestAnimationFrame"],"version":3,"file":"index.8be78e1a.js.map"}